# %pip install -q ipywidgets

import numpy as np
import matplotlib.pyplot as plt
from ipywidgets import interactive

##Тим хто хоче зробити передбачення наближаючи температурні коливання графіками функцій, зокрема, сінусами.
# Пропоную вашій увазі мою версію наближення функціями, але спрощену, адже не використовувала реальні дані,
# але будувала тільки алгоритм наближення.
# Важливо розуміти, що любі коливання низького порядку (за день та декадні) слід
# накладати на коливання більш високого порядку (річні + глобальне потепління, яке задає вектор коливань).
# Під накладанням слід мати на увазі суму графіків. Для обчислення передбачень важливо їх нормувати ділячи
# на кількість понять, які ви об'єднуєте: (Денні + річні + декадні)/3.

# Кількість років

def predict_temperature(year_number=30, global_warming_rate = 100, year_cycles = 12, temperature_change = 1, axial_shift = 0):
    x = np.linspace(0, year_number*2*np.pi, 100)

    # Функція глобального потепління
    global_warming_func = x/global_warming_rate

    # Функція річного коливання - sin(x), адже вона враховує одне літо та одну зиму, починаючись з весни.
    # temperature_change - амплітуда температур поділена на 2. Якщо = 30, то змінюється від -30 до 30.
    # axial_shift - наскільки зсунута амплітуда температур temperature_change * 2 відносно нуля. Якщо =5, то -25 до 35.
    year_temp_change = temperature_change * np.sin(x) + global_warming_func + axial_shift

    # Функція зміни більш екстремальними роками та більш помірними кожні 10 років
    decage_temp_change = np.sin(x/year_cycles/2/np.pi)/10 + year_temp_change

    # Функція денного коливання температури. В ідеалі, має бути стільки коливань, скільки днів в році.
    # Ділення на 20 дає зменшення амплітуди, тобто денні коливання не перевищують 5% сезонного коливання.
    # Важливо накласти цю функцію на рік, адже денні коливання відбуваються в межах річних.
    day_temp_change = (np.sin(365*x)/20 + year_temp_change)

    # Результуючий графік передбачення погодних коливань. Ділення на два, адже ми складаємо 2 поняття - денне та річне,
    # але амплітуда має залишитись
    temp_prediction_func = (year_temp_change + decage_temp_change + day_temp_change)/3

    # Побудова графіків
    plt.figure(figsize=(10, 6))
    plt.plot(x, year_temp_change, label='Річне коливання')
    plt.plot(x, decage_temp_change, label='Десятилітнє коливання')
    plt.plot(x, day_temp_change, label='Денне коливання')
    plt.plot(x, temp_prediction_func, label='Прогнозоване коливання')
    plt.xlabel('Роки, значення слід ділити на 2Pi')
    plt.ylabel('Температура')
    plt.title('Передбачення температурних коливань (нормоване)')
    plt.legend()
    plt.grid(True)
    plt.show()

w=interactive(predict_temperature,year_number=(1,100), temperature_change=(-5, 30))
w

# Змінюючи річні цикли можна побачити, що кожні n років графік представлятиме половину сінусу.
# Це приблизно відповідає даним метеорологів, оскільки є поняття похолодання на фоні глобального потепління,
# яке змінюється циклом більш теплих років.


